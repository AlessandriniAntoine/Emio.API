# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on: workflow_dispatch

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          python -m pip install build pydoc-markdown
          python -m build
          pydoc-markdown

      - name: Create Release
        if: success() || failure()
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: release-${{ github.ref_name }}
          fail_on_unmatched_files: false
          target_commitish: ${{ github.sha }}
          draft: false
          body: |
            Last updated on $(date +'%Y-%m-%d (at %T UTC)').
          files: |
            dist/*
            emioapi.md
            
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: |
            dist/
            emioapi.md
          
  publish-to-testpypi:
     name: Publish Python üêç distribution üì¶ to TestPyPI
     needs:
       - build
     runs-on: ubuntu-latest
     if: startsWith(github.event.ref, 'refs/tags/v')

     environment:
       name: testpypi-emioapi
       url: https://test.pypi.org/p/emioapi

     permissions:
       id-token: write  # IMPORTANT: mandatory for trusted publishing

     steps:
     - name: Download all the dists
       uses: actions/download-artifact@v4
       with:
         name: release-dists
         path: dist/
     - name: Publish distribution üì¶ to TestPyPI
       uses: pypa/gh-action-pypi-publish@release/v1
       with:
         repository-url: https://test.pypi.org/legacy/
          
  # pypi-publish:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - release-build
  #   permissions:
  #     # IMPORTANT: this permission is mandatory for trusted publishing
  #     id-token: write

  #   # Dedicated environments with protections for publishing are strongly recommended.
  #   # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
  #   environment:
  #     name: pypi
  #     # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
  #     # url: https://pypi.org/p/YOURPROJECT
  #     #
  #     # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
  #     # ALTERNATIVE: exactly, uncomment the following line instead:
  #     # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

  #   steps:
  #     - name: Retrieve release distributions
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: release-dists
  #         path: dist/

  #     - name: Publish release distributions to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         packages-dir: dist/
